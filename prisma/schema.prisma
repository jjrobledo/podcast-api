// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  username         String             @unique
  email            String             @unique
  hash             String
  History          History[]
  Subscription     Subscription[]
  ListenLater      ListenLater[]
  PodcastUserStats PodcastUserStats[]

  @@map("users")
}

model Episode {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  podcastId        Int
  title            String
  description      String?
  duration_minutes Int?
  air_date         DateTime?
  History          History[]

  podcast     Podcast       @relation(fields: [podcastId], references: [id])
  ListenLater ListenLater[]

  @@map("episodes")
}

model Podcast {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  rssFeedUrl String   @unique

  title            String
  description      String
  Episode          Episode[]
  Subscription     Subscription[]
  PodcastCategory  PodcastCategory[]
  PodcastUserStats PodcastUserStats[]

  @@map("podcasts")
}

model Category {
  id              Int               @id @default(autoincrement())
  genre           String
  PodcastCategory PodcastCategory[]
}

model PodcastCategory {
  podcastId  Int
  categoryId Int
  podcast    Podcast @relation(fields: [podcastId], references: [id])

  category Category @relation(fields: [categoryId], references: [id])

  @@id([podcastId, categoryId])
}

model History {
  userId                    Int
  episodeId                 Int
  listened_duration_minutes Int?
  created_at                DateTime @default(now())
  updated_at                DateTime @default(now())
  user                      User     @relation(fields: [userId], references: [id])
  episode                   Episode  @relation(fields: [episodeId], references: [id])

  @@id([userId, episodeId])
}

model Subscription {
  userId    Int
  podcastId Int
  user      User    @relation(fields: [userId], references: [id])
  podcast   Podcast @relation(fields: [podcastId], references: [id])

  @@id([userId, podcastId])
}

model ListenLater {
  userId     Int
  episodeId  Int
  created_at DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
  episode    Episode  @relation(fields: [episodeId], references: [id])

  @@id([userId, episodeId])
}

model PodcastUserStats {
  userId                Int
  podcastId             Int
  firstSubscribedAt     DateTime?
  lastListenedAt        DateTime?
  totalListenMinutes    Int?
  episodesListened      Int?
  mostListenedEpisodeId Int?
  averageListenDuration Int?
  completionRatio       Float?
  favoriteListenTime    Int?
  longestStreak         Int?
  ranking               Int?

  user    User    @relation(fields: [userId], references: [id])
  podcast Podcast @relation(fields: [podcastId], references: [id])

  @@id([userId, podcastId])
}
